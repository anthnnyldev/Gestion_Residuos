# Generated by Django 5.1.3 on 2024-11-15 00:51

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('security', '0004_remove_product_category_remove_points_user_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_admin', models.BooleanField(default=False, help_text='Indica si el usuario es un administrador.')),
                ('phone_number', models.CharField(blank=True, help_text='Número de teléfono del usuario.', max_length=10)),
                ('address', models.CharField(blank=True, help_text='Dirección del usuario.', max_length=255)),
                ('date_of_birth', models.DateField(blank=True, help_text='Fecha de nacimiento del usuario.', null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], help_text='Género del usuario.', max_length=10)),
                ('profile_image', models.ImageField(blank=True, help_text='Imagen de perfil del usuario.', null=True, upload_to='profile_img/')),
                ('role', models.CharField(choices=[('USER', 'Usuario'), ('ADMIN', 'Administrador')], default='USER', help_text='Rol del usuario.', max_length=6)),
                ('groups', models.ManyToManyField(blank=True, related_name='security_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='security_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='FinalUser',
        ),
    ]
